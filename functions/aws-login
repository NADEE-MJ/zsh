# Assume you have a profile called 'default'. Change if necessary.
AWS_PROFILE="default"

# Retrieve the ARNs of all MFA devices associated with the IAM user
IFS=$'\n' MFA_ARNs=($(aws iam list-mfa-devices --query "MFADevices[].SerialNumber" --output text --profile $AWS_PROFILE))

# Function to retrieve temporary credentials
get_temp_creds() {
    local MFA_ARN=$1
    local MFA_CODE=$2

    aws sts get-session-token --serial-number $MFA_ARN --token-code $MFA_CODE --profile $AWS_PROFILE 2>&1
}

attempt_count=0
while true; do
    attempt_count=$((attempt_count + 1))

    # Prompt for MFA code
    printf "Enter MFA code (Attempt %s/3): " "$attempt_count"
    read MFA_CODE

    # Flag to check if any MFA device worked
    mfa_success=0

    # Try to use the MFA code with each MFA device
    for MFA_ARN in "${MFA_ARNs[@]}"; do
        TEMP_CREDS=$(get_temp_creds $MFA_ARN $MFA_CODE)

        # Check if the command succeeded
        if [[ $? -eq 0 ]]; then
            echo $TEMP_CREDS > $(pwd)/.temp_aws_credentials.json
            echo -e "Temporary credentials created at $(pwd)/.temp_aws_credentials.json\n"

            mfa_success=1
            break
        fi
    done

    # If any MFA device succeeded, break out of the loop
    if [[ $mfa_success -eq 1 ]]; then
        break
    else
        if [[ $attempt_count -eq 3 ]]; then
            echo "Failed to validate MFA code after 3 attempts."
            return 1
        fi
        echo "Failed to retrieve temporary credentials for the provided MFA code. Please try again."
    fi
done